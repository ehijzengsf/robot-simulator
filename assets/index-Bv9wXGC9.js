(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const c of s.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function n(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=n(o);fetch(o.href,s)}})();let currentSeries=null,currentAssignmentIndex=0,completedAssignments=new Set,currentHintLevel=0,robot={x:0,y:5,dir:0},gridSize=10,obstacles=Array.from({length:gridSize},()=>Array(gridSize).fill(!1)),painted=Array.from({length:gridSize},()=>Array(gridSize).fill(!1)),hasDiamond=!1,isPainting=!1,diamond={x:8,y:9},canvas$1=null,ctx=null,cellSize=0;function initCanvas(e){canvas$1=e,ctx=canvas$1.getContext("2d"),cellSize=canvas$1.width/gridSize}function drawGrid(){if(ctx){ctx.clearRect(0,0,canvas$1.width,canvas$1.height);for(let e=0;e<gridSize;e++)for(let t=0;t<gridSize;t++)obstacles[e][t]?(ctx.fillStyle="#444",ctx.fillRect(t*cellSize,e*cellSize,cellSize,cellSize)):painted[e][t]&&(ctx.fillStyle="#005f87",ctx.fillRect(t*cellSize,e*cellSize,cellSize,cellSize)),ctx.strokeStyle="#00ff9f",ctx.strokeRect(t*cellSize,e*cellSize,cellSize,cellSize);if(hasDiamond||(ctx.fillStyle="deepskyblue",ctx.beginPath(),ctx.moveTo(diamond.x*cellSize+cellSize/2,diamond.y*cellSize+5),ctx.lineTo(diamond.x*cellSize+5,diamond.y*cellSize+cellSize/2),ctx.lineTo(diamond.x*cellSize+cellSize/2,diamond.y*cellSize+cellSize-5),ctx.lineTo(diamond.x*cellSize+cellSize-5,diamond.y*cellSize+cellSize/2),ctx.closePath(),ctx.fill()),robot){ctx.fillStyle="red";const e=robot.x*cellSize+cellSize/2,t=robot.y*cellSize+cellSize/2,n=cellSize*.6;ctx.beginPath();const r=robot.dir*Math.PI/2,o=e+Math.cos(r)*n/2,s=t+Math.sin(r)*n/2,c=r+Math.PI*.8,a=r-Math.PI*.8,d=e+Math.cos(c)*n/2,l=t+Math.sin(c)*n/2,u=e+Math.cos(a)*n/2,m=t+Math.sin(a)*n/2;ctx.moveTo(o,s),ctx.lineTo(d,l),ctx.lineTo(u,m),ctx.closePath(),ctx.fill()}}}function canMove(e,t){return e>=0&&e<gridSize&&t>=0&&t<gridSize&&!obstacles[t][e]}async function loadAssignmentSeries(e){try{currentSeries=await(await fetch(`/config/assignments/${e}.json`)).json(),currentAssignmentIndex=0,completedAssignments.clear(),currentHintLevel=0,updateUI(),loadAssignment(currentAssignmentIndex)}catch(t){console.error("Fout bij het laden van de opdrachtenserie:",t)}}function loadAssignment(e){if(!currentSeries||e>=currentSeries.assignments.length)return;const t=currentSeries.assignments[e];currentHintLevel=0,robot={x:t.robot.x,y:t.robot.y,dir:t.robot.dir};for(let n=0;n<gridSize;n++)for(let r=0;r<gridSize;r++)obstacles[n][r]=!1,painted[n][r]=!1;if(hasDiamond=!1,t.diamonds&&t.diamonds.length>0){const n=t.diamonds[0];diamond={x:n.x,y:n.y}}t.obstacles&&t.obstacles.forEach(n=>{obstacles[n.y][n.x]=!0}),document.getElementById("assignment-title").textContent=t.title,document.getElementById("assignment-description").textContent=t.description,updateLearningObjectives(t),updateHints(t),drawGrid(),currentSeries&&currentSeries.assignments[e]&&updateDifferentiationOptions(currentSeries.assignments[e])}function updateLearningObjectives(e){const t=document.getElementById("learning-objectives");t.innerHTML="<h4>Leerdoelen:</h4><ul>",e.learningObjectives.forEach(n=>{t.innerHTML+=`<li>${n}</li>`}),t.innerHTML+="</ul>"}function showNextHint(){if(!currentSeries)return;const e=currentSeries.assignments[currentAssignmentIndex];e.hints&&currentHintLevel<e.hints.length-1&&(currentHintLevel++,updateHints(e))}function updateHints(e){const t=document.getElementById("hints");if(t.innerHTML="<h4>Hints:</h4>",e.hints&&e.hints.length>0){const n=e.hints[currentHintLevel];if(t.innerHTML+=`<p>${n.text}</p>`,currentHintLevel<e.hints.length-1){const r=document.createElement("button");r.textContent="Volgende hint",r.onclick=showNextHint,t.appendChild(r)}}}function updateUI(){if(!currentSeries)return;document.getElementById("series-title").textContent=currentSeries.name,document.getElementById("series-description").textContent=currentSeries.description;const e=document.getElementById("series-learning-objectives");e.innerHTML="<h4>Leerdoelen van deze serie:</h4><ul>",currentSeries.learningObjectives.forEach(n=>{e.innerHTML+=`<li>${n}</li>`}),e.innerHTML+="</ul>";const t=document.getElementById("assignment-status");t.innerHTML="",currentSeries.assignments.forEach((n,r)=>{const o=document.createElement("div");o.className="status-dot",o.style.width="20px",o.style.height="20px",o.style.borderRadius="50%",o.style.border="2px solid #00ff9f",o.style.backgroundColor=completedAssignments.has(r)?"#00ff9f":"transparent",o.style.cursor=completedAssignments.has(r)?"pointer":"default",completedAssignments.has(r)&&(o.onclick=()=>loadAssignment(r)),t.appendChild(o)})}function checkAssignmentCompletion(){if(!currentSeries)return;currentSeries.assignments[currentAssignmentIndex],hasDiamond&&!completedAssignments.has(currentAssignmentIndex)&&(completedAssignments.add(currentAssignmentIndex),document.getElementById("result").textContent="Opdracht geslaagd!",updateUI(),setTimeout(()=>{currentAssignmentIndex<currentSeries.assignments.length-1&&(currentAssignmentIndex++,loadAssignment(currentAssignmentIndex))},2500))}document.addEventListener("DOMContentLoaded",()=>{loadAssignmentSeries("basic1")});function updateDifferentiationOptions(e){const t=document.getElementById("acceleration-options");t.innerHTML="",currentSeries.differentiation.acceleration&&currentSeries.differentiation.acceleration.options.forEach(s=>{const c=createOptionCard(s,()=>activateAcceleration(s));t.appendChild(c)});const n=document.getElementById("deepening-options");n.innerHTML="",currentSeries.differentiation.deepening&&currentSeries.differentiation.deepening.options.forEach(s=>{const c=createOptionCard(s,()=>activateDeepening(s));n.appendChild(c)});const r=document.getElementById("practice-options");r.innerHTML="",currentSeries.differentiation.practice&&currentSeries.differentiation.practice.options.forEach(s=>{const c=createOptionCard(s,()=>activatePractice(s));r.appendChild(c)});const o=document.getElementById("variation-options");o.innerHTML="",e.variations&&e.variations.forEach(s=>{const c=createOptionCard(s,()=>loadVariation(s));o.appendChild(c)})}function createOptionCard(e,t){const n=document.createElement("div");n.className="option-card",n.onclick=t;const r=document.createElement("h6");r.textContent=e.title;const o=document.createElement("p");return o.textContent=e.description,n.appendChild(r),n.appendChild(o),n}function activateAcceleration(e){switch(e.type){case"step_counter":startStepCounter();break;case"line_counter":startLineCounter();break}}function activateDeepening(e){switch(e.type){case"sequence":startDiamondSequence();break;case"pattern":startPatternChallenge();break}}function activatePractice(e){switch(e.type){case"variation":showVariations();break;case"guided":startGuidedPractice();break}}function loadVariation(e){if(!currentSeries)return;const t=currentSeries.assignments[currentAssignmentIndex];robot={x:e.robot.x,y:e.robot.y,dir:e.robot.dir};for(let n=0;n<gridSize;n++)for(let r=0;r<gridSize;r++)obstacles[n][r]=!1,painted[n][r]=!1;if(hasDiamond=!1,e.diamonds&&e.diamonds.length>0){const n=e.diamonds[0];window.diamond={x:n.x,y:n.y}}e.obstacles&&e.obstacles.forEach(n=>{obstacles[n.y][n.x]=!0}),document.getElementById("assignment-title").textContent=`${t.title} - ${e.title}`,drawGrid()}function startStepCounter(){let e=0;const t=move;move=function(n=1){e+=n,t(n),document.getElementById("result").textContent=`Aantal stappen: ${e}`}}function startLineCounter(){const e=document.getElementById("code");e.value,e.oninput=function(){const t=this.value.split(`
`).filter(n=>n.trim().length>0).length;document.getElementById("result").textContent=`Aantal regels code: ${t}`}}function startDiamondSequence(){if(!currentSeries)return;const t=currentSeries.assignments[currentAssignmentIndex].diamonds;if(t.length>1){let n=0;pickup=function(){robot.x===t[n].x&&robot.y===t[n].y?(n++,n>=t.length?document.getElementById("result").textContent="Alle diamanten opgepakt!":document.getElementById("result").textContent=`Diamant ${n} van ${t.length} opgepakt`):document.getElementById("result").textContent="❌ Geen diamant op deze plek.",drawGrid()}}}function startPatternChallenge(){document.getElementById("result").textContent="Maak een patroon met de verf functionaliteit. Gebruik move() en paint() om een mooi patroon te maken."}function showVariations(){if(!currentSeries)return;const e=currentSeries.assignments[currentAssignmentIndex];if(e.variations){const t=e.variations.map(n=>n.title).join(`
`);document.getElementById("result").textContent=`Beschikbare variaties:
${t}`}}function startGuidedPractice(){if(!currentSeries)return;const e=currentSeries.assignments[currentAssignmentIndex],t=[];e.robot.x!==e.diamonds[0].x&&(t.push("Draai naar de diamant"),t.push("Beweeg naar de diamant")),t.push("Pak de diamant op"),document.getElementById("result").textContent=`Stap voor stap oefening:
${t.join(`
`)}`}function move(e=1){if(e===1){let r=robot.x,o=robot.y;switch(robot.dir){case 0:r++;break;case 1:o++;break;case 2:r--;break;case 3:o--;break}canMove(r,o)&&(robot.x=r,robot.y=o,isPainting&&(painted[robot.y][robot.x]=!0)),drawGrid();return}let t=0;function n(){if(t<e){let r=robot.x,o=robot.y;switch(robot.dir){case 0:r++;break;case 1:o++;break;case 2:r--;break;case 3:o--;break}canMove(r,o)&&(robot.x=r,robot.y=o,isPainting&&(painted[robot.y][robot.x]=!0)),drawGrid(),t++,setTimeout(n,500)}}n()}function turnLeft(){robot.dir=(robot.dir+3)%4,drawGrid()}function turnRight(){robot.dir=(robot.dir+1)%4,drawGrid()}function paint(){isPainting=!0;const e=document.getElementById("result");e.textContent="🎨 Verf modus: AAN",painted[robot.y][robot.x]=!0,drawGrid()}function paintOff(){isPainting=!1;const e=document.getElementById("result");e.textContent="🎨 Verf modus: UIT",drawGrid()}function pickup(){const e=document.getElementById("result");robot.x===diamond.x&&robot.y===diamond.y?(hasDiamond=!0,e.textContent="✅ Goed gedaan! Je hebt de diamant opgepakt.",checkAssignmentCompletion()):e.textContent="❌ Geen diamant op deze plek.",drawGrid()}function place(){const e=document.getElementById("result");hasDiamond?(diamond.x=robot.x,diamond.y=robot.y,hasDiamond=!1,e.textContent="💎 Diamant neergezet!"):e.textContent="❌ Je hebt geen diamant om neer te zetten.",drawGrid()}function runCode(){const code=document.getElementById("code").value,commands=code.split(`
`).map(e=>e.trim()).filter(e=>e);robot.x=0,robot.y=5,robot.dir=0,hasDiamond=!1,isPainting=!1,document.getElementById("result").textContent="",drawGrid();let i=0;function step(){if(i>=commands.length)return;const cmd=commands[i];try{eval(cmd),drawGrid(),i++,setTimeout(step,500)}catch(e){document.getElementById("result").textContent="❌ Fout: "+e.message}}setTimeout(step,100)}function appendInstruction(e){const t=document.getElementById("code");t.value+=(t.value.trim()?`
`:"")+e,t.scrollTop=t.scrollHeight,t.focus()}function reset(e=!0,t=!0){if(robot.x=0,robot.y=5,robot.dir=0,hasDiamond=!1,isPainting=!1,document.getElementById("result").textContent="",t&&(document.getElementById("code").value=""),e)for(let n=0;n<gridSize;n++)for(let r=0;r<gridSize;r++)painted[n][r]=!1;drawGrid()}const canvas=document.getElementById("grid");initCanvas(canvas);Object.assign(window,{move,turnLeft,turnRight,paint,paintOff,pickup,place,runCode,appendInstruction,reset,showNextHint});loadAssignmentSeries("basic1");
